//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HotelRoomBooking
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Hotel_BookingEntities : DbContext
    {
        public Hotel_BookingEntities()
            : base("name=Hotel_BookingEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AddMember> AddMembers { get; set; }
        public virtual DbSet<Bank> Banks { get; set; }
        public virtual DbSet<Booking> Bookings { get; set; }
        public virtual DbSet<FeedBack> FeedBacks { get; set; }
        public virtual DbSet<HMap> HMaps { get; set; }
        public virtual DbSet<Hotel> Hotels { get; set; }
        public virtual DbSet<Payment> Payments { get; set; }
        public virtual DbSet<place> places { get; set; }
        public virtual DbSet<price> prices { get; set; }
        public virtual DbSet<Room> Rooms { get; set; }
        public virtual DbSet<UPI> UPIs { get; set; }
        public virtual DbSet<PaymentBill> PaymentBills { get; set; }
        public virtual DbSet<customer> customers { get; set; }
        public virtual DbSet<BookingHistory> BookingHistories { get; set; }
        public virtual DbSet<Contact> Contacts { get; set; }
    
     
        public virtual ObjectResult<ReceiptFor_Result> ReceiptFor(Nullable<int> rid)
        {
            var ridParameter = rid.HasValue ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReceiptFor_Result>("ReceiptFor", ridParameter);
        }
    }
}
